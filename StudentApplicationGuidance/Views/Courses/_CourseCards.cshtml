@model List<StudentApplicationGuidance.Models.Course>

@foreach (var course in Model)
{
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@course.CourseName</h5>
                <h6 class="card-subtitle mb-2 text-muted">
                    @if (course.University != null)
                    {
                        @course.University.UniversityName
                    }
                    else
                    {
                        <span class="text-danger">University information not available</span>
                    }
                </h6>
                <p class="card-text">Required Points: @course.Points</p>

                <h6 class="mt-3">Required Subjects:</h6>
                <ul class="list-unstyled">
                    @if (course.SubjectRequired != null && course.SubjectRequired.Any())
                    {
                        @foreach (var subject in course.SubjectRequired)
                        {
                            <li><small>@subject.Subject.Name (Level @subject.SubjectLevel)</small></li>
                        }
                    }
                    else
                    {
                        <li><small>No required subjects available.</small></li>
                    }
                </ul>

                @if (course.AlternativeSubjects != null && course.AlternativeSubjects.Any())
                {
                   @*  <h6 class="mt-3">Alternative Subjects:</h6> *@
                    <p>
                        <h7>Minimum number of other designated Subjects required:</h7>
                        @course.AlternativeSubjects.FirstOrDefault()?.NumberOfRequiredAlternativeSubjects
                    </p>
                    <ul class="list-unstyled">
                        @foreach (var altSubject in course.AlternativeSubjects.Take(5))
                        {
                            <li><small>@altSubject.AlternativeSubjectName (Level @altSubject.AlternativeSubjectLevel)</small></li>
                        }
                        @if (course.AlternativeSubjects.Count() > 5)
                        {
                            <li style="color: #800080;">... and other designated subjects</li>
                        }
                    </ul>
                }
                else
                {
                    <p><small>No alternative subjects available.</small></p>
                }

                <!-- Eligibility Message Section -->
                <div id="eligibilityMessage_@course.CourseId" class="mt-3 p-3 border rounded">
                    <h6 class="mb-2">Eligibility Message</h6>
                    <p id="eligibilityText_@course.CourseId"><!-- Eligibility message will be inserted here --></p>
                </div>

                <a href="@Url.Action("CheckQualification", "Courses", new { universityName = course.University?.UniversityName, courseName = course.CourseName })"
                   class="btn btn-primary mt-2">
                    View more details
                </a>

            </div>
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        window.loadCareerAdvice = function (courseId) {
            fetch(`/Courses/GetCareerAdviceAndEligibility?courseId=${courseId}`)
                .then(response => response.json())
                .then(data => {
                    const eligibilityText = document.getElementById(`eligibilityText_${courseId}`);
                    const eligibilityMessage = document.getElementById(`eligibilityMessage_${courseId}`);
                    eligibilityText.textContent = data.message;

                    eligibilityMessage.classList.remove('bg-success', 'bg-danger', 'text-white');
                    if (data.qualifies) {
                        eligibilityMessage.classList.add('bg-success', 'text-white');
                    } else {
                        eligibilityMessage.classList.add('bg-danger', 'text-white');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    const eligibilityText = document.getElementById(`eligibilityText_${courseId}`);
                    const eligibilityMessage = document.getElementById(`eligibilityMessage_${courseId}`);
                    eligibilityText.textContent = 'Error loading eligibility information.';
                    eligibilityMessage.classList.add('bg-danger', 'text-white');
                });
        }
    });
</script>
