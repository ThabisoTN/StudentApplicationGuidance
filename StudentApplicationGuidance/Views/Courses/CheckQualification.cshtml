@using StudentApplicationGuidance.ModelView
@model QualificationResultViewModel

@{
    ViewData["Title"] = "Qualification Result";
}

<div class="container mt-4">
    <h2>@Model.Course?.CourseName</h2>
    <h4 class="text-muted">@Model.Course?.University?.UniversityName</h4>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title">Qualification Status</h5>
            @if (Model.Qualifies)
            {
                <div class="alert alert-success">
                    <h4 class="alert-heading">Congratulations!</h4>
                    <p>
                        Based on your selected subjects and levels, you meet all the necessary requirements and qualify for this course. We are confident that your academic background and achievements make you a strong candidate for success in this program!

                        We strongly encourage you to apply for this course. It's a fantastic opportunity to further your education and pursue your passions. With your dedication and hard work, we believe you will excel and achieve great things. Don't hesitate—take the next step in your academic journey and apply today!
                    </p>
                </div>
            }
            else
            {
                <div class="alert alert-danger">
                    <h4 class="alert-heading">Requirements Not Met</h4>
                    <p>Unfortunately, you do not meet all the minimum requirements for this course. Here's why:</p>
                    <ul>
                        @foreach (var reason in Model.Reasons)
                        {
                            <li>@reason</li>
                        }
                    </ul>
                </div>
            }

            <h5 class="mt-4">Course Requirements:</h5>
            <p>Required Points: @Model.Course?.Points</p>

            <h6>Required Subjects:</h6>
            <ul>
                @foreach (var subject in Model.Course?.SubjectRequired ?? Enumerable.Empty<StudentApplicationGuidance.Data.SubjectRequired>())
                {
                    var userSubject = Model.UserSubjects?.FirstOrDefault(us => us.Subject.Name == subject.Subject.Name);
                    if (userSubject != null)
                    {
                        <li>
                            @subject.Subject.Name (Level @subject.SubjectLevel)
                            @if (userSubject.Level < subject.SubjectLevel)
                            {
                                <span class="text-danger"> - Your level (@userSubject.Level) is below the required level (@subject.SubjectLevel)</span>
                            }
                            else
                            {
                                <span class="text-success"> - Requirement met</span>
                            }
                        </li>
                    }
                }
            </ul>

            @if (Model.Course?.AlternativeSubjects?.Any() == true)
            {
                <h6>English (Home Language or First Additional Language) is required, along with at least one additional subject:</h6>
                <ul>
                    @foreach (var altSubject in Model.Course.AlternativeSubjects)
                    {
                        var userSubject = Model.UserSubjects?.FirstOrDefault(us => us.Subject.Name == altSubject.AlternativeSubjectName);
                        if (userSubject != null)
                        {
                            <li>
                                @altSubject.AlternativeSubjectName (Level @altSubject.AlternativeSubjectLevel)
                                @if (userSubject.Level < altSubject.AlternativeSubjectLevel)
                                {
                                    <span class="text-danger"> - Your level (@userSubject.Level) is below the required level (@altSubject.AlternativeSubjectLevel)</span>
                                }
                                else
                                {
                                    <span class="text-success"> - Requirement met</span>
                                }
                            </li>
                        }
                    }
                </ul>
            }

            <div id="careerAdvice" class="mt-4 p-3 border rounded bg-light">
                <h5 class="mb-2">Career Advice</h5>
                <div id="careerAdviceSpinner" class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div id="careerAdviceContent" style="display: none;"></div>
            </div>
        </div>
    </div>

    <a href="@Url.Action("Index", "Courses")" class="btn btn-primary mt-4">Back to Course List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            generateCareerAdvice(@Model.Course?.CourseId ?? 0);
        });

        function generateCareerAdvice(courseId) {
            if (courseId === 0) return;

            const spinner = document.getElementById('careerAdviceSpinner');
            const content = document.getElementById('careerAdviceContent');

            spinner.style.display = 'inline-block';
            content.style.display = 'none';

            fetch(`/Courses/GetCareerAdvice?courseId=${courseId}`)
                .then(response => response.json())
                .then(data => {
                    spinner.style.display = 'none';
                    content.style.display = 'block';
                    if (data.success) {
                        content.innerHTML = data.advice; // This will now include clickable links
                    } else {
                        content.innerHTML = 'Error loading career advice. Please try again.';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    spinner.style.display = 'none';
                    content.style.display = 'block';
                    content.innerHTML = 'Error loading career advice. Please try again.';
                });
        }
    </script>
}
