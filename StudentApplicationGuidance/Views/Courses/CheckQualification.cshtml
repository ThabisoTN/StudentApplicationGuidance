@using StudentApplicationGuidance.ModelView
@model QualificationResultViewModel

@{
    ViewData["Title"] = "Qualification Result";
}

<div class="container mt-4">
    <h2>@Model.Course.CourseName</h2>
    <h4 class="text-muted">@Model.Course.University</h4>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title">Qualification Status</h5>
            @if (Model.Qualifies)
            {
                <div class="alert alert-success">
                    <h4 class="alert-heading">Congratulations!</h4>
                    <p>Congratulations! Based on your selected subjects and levels, you meet all the necessary requirements and qualify for this course. We are confident that your academic background and achievements make you a strong candidate for success in this program. Welcome aboard and we look forward to supporting you on your educational journey!.</p>
                </div>
            }
            else
            {
                <div class="alert alert-danger">
                    <h4 class="alert-heading">Requirements Not Met</h4>
                    <p>Unfortunately, you do not meet all the minimum requirements for this course. Here's why:</p>
                    <ul>
                        @foreach (var reason in Model.Reasons)
                        {
                            <li>@reason</li>
                        }
                    </ul>
                </div>
            }

            <h5 class="mt-4">Course Requirements:</h5>
            <p>Required Points: @Model.Course.Points</p>
            <h6>Required Subjects:</h6>
            <ul>
                @foreach (var subject in Model.Course.SubjectRequired)
                {
                    <li>
                        @subject.Subject.Name (Level @subject.SubjectLevel)
                        @if (!Model.Qualifies && Model.UserSubjects.Any(us => us.Subject.Name == subject.Subject.Name))
                        {
                            var userSubject = Model.UserSubjects.First(us => us.Subject.Name == subject.Subject.Name);
                            if (userSubject.Level < subject.SubjectLevel)
                            {
                                <span class="text-danger"> - Your level (@userSubject.Level) is below the required level (@subject.SubjectLevel)</span>
                            }
                            else
                            {
                                <span class="text-success"> - Requirement met</span>
                            }
                        }
                        else if (!Model.Qualifies)
                        {
                            <span class="text-danger"> - Subject not taken</span>
                        }
                    </li>
                }
            </ul>
            @if (Model.Course.AlternativeSubjects.Any())
            {
                <h6>Alternative Subjects (You need at least one):</h6>
                <ul>
                    @foreach (var altSubject in Model.Course.AlternativeSubjects)
                    {
                        <li>
                            @altSubject.AlternativeSubjectName (Level @altSubject.AlternativeSubjectLevel)
                            @if (!Model.Qualifies && Model.UserSubjects.Any(us => us.Subject.Name == altSubject.AlternativeSubjectName))
                            {
                                var userSubject = Model.UserSubjects.First(us => us.Subject.Name == altSubject.AlternativeSubjectName);
                                if (userSubject.Level < altSubject.AlternativeSubjectLevel)
                                {
                                    <span class="text-danger"> - Your level (@userSubject.Level) is below the required level (@altSubject.AlternativeSubjectLevel)</span>
                                }
                                else
                                {
                                    <span class="text-success"> - Requirement met</span>
                                }
                            }
                            else if (!Model.Qualifies)
                            {
                                <span class="text-danger"> - Subject not taken</span>
                            }
                        </li>
                    }
                </ul>
            }
        </div>
    </div>

    <a href="@Url.Action("Index", "Courses")" class="btn btn-primary mt-4">Back to Course List</a>
</div>
